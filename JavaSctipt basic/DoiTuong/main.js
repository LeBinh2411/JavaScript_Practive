// ƒê·ªëi t∆∞·ª£ng - object
// Trong javaScript ƒë·ªëi t∆∞·ª£ng l√† 1 ki·ªÉu d·ªØ li·ªáu d√πng ƒë·ªÉ l∆∞u ch·ªØ c√°c c·∫∑p 
// (key - value pairs): kh√≥a - gi√° tr·ªã
// N·∫øu thu·ªôc t√≠nh trong ƒë·ªëi t∆∞·ª£ng k ph·∫£i l√† chu·ªói, th√¨ javaScript s·∫Ω t·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi th√†nh chu·ªói
//T·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng bi·ªÉu di·ªÖn m·ªôt con ch√≥ c√≥ t√™n myDogl√† ch·ª©a c√°c thu·ªôc t√≠nh name(chu·ªói), legs, tailsv√† friends.
//B·∫°n c√≥ th·ªÉ ƒë·∫∑t c√°c thu·ªôc t√≠nh ƒë·ªëi t∆∞·ª£ng n√†y th√†nh b·∫•t k·ª≥ gi√° tr·ªã n√†o b·∫°n mu·ªën, 
// mi·ªÖn l√† nameƒë√≥ l√† chu·ªói, legsl√† tailss·ªë v√† friendsl√† m·∫£ng.
const myDog1  = {
    "name": "Bun",
    legs : 4,
    tails: 1,
    friends:[1,2,3,4,5]
  };
//v√≠ d·ª• v·ªÅ vi·ªác s·ª≠ d·ª•ng bi·∫øn ƒë·ªÉ truy c·∫≠p v√†o thu·ªôc t√≠nh:
//  Chu·ªói k√Ω t·ª± Dobermans·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã trong b·∫£ng ƒëi·ªÅu khi·ªÉn.
  const dogs = {
    Fido: "Mutt",
    Hunter: "Doberman",
    Snoopie: "Beagle"
  }; 
  const myDog = "Hunter";
  const myBreed = dogs[myDog];
  console.log(myBreed);
//V√¨ ch√∫ ch√≥ n√†y ƒë·∫∑c bi·ªát vui v·∫ª, h√£y ƒë·ªïi t√™n ch√∫ th√†nh chu·ªói Happy Camper.
// Sau ƒë√¢y l√† c√°ch ch√∫ng ta c·∫≠p nh·∫≠t thu·ªôc t√≠nh t√™n c·ªßa ƒë·ªëi t∆∞·ª£ng ch√∫: 
// ourDog.name = "Happy Camper";ho·∫∑c ourDog["name"] = "Happy Camper";
// B√¢y gi·ªù khi ch√∫ng ta ƒë√°nh gi√° ourDog.name, thay v√¨ nh·∫≠n ƒë∆∞·ª£c Camper, 
// ch√∫ng ta s·∫Ω nh·∫≠n ƒë∆∞·ª£c t√™n m·ªõi c·ªßa ch√∫, Happy Camper.
const ourDog = {
    "name": "Camper",
    "legs": 4,
    "tails": 1,
    "friends": ["everything!"]
  };
  ourDog.name = "Happy Camper";
// D·∫•u ch·∫•m ( . ): d√πng ƒë·ªçc d·ªØ li·ªáu, g·ªçi d·ªØ li·ªáu, th√™m m·ªõi d·ªØ li·ªáu
//delete : x√≥a
//Chuy·ªÉn ƒë·ªïi c√¢u l·ªánh switch th√†nh m·ªôt ƒë·ªëi t∆∞·ª£ng c√≥ t√™n l√† lookup. 
// S·ª≠ d·ª•ng n√≥ ƒë·ªÉ tra c·ª©u val v√† g√°n chu·ªói li√™n quan cho result bi·∫øn.
function phoneticLookup(val) {
    let result = "";
    // switch(val) {
  //   case "alpha":
  //     result = "Adams";
  //     break;
  //   case "bravo":
  //     result = "Boston";
  //     break;
  //   case "charlie":
  //     result = "Chicago";
  //     break;
  //   case "delta":
  //     result = "Denver";
  //     break;
  //   case "echo":
  //     result = "Easy";
  //     break;
  //   case "foxtrot":
  //     result = "Frank";
  // }
    const lookup = {
      "alpha": "Adams",
      "bravo": "Boston",
      "charlie": "Chicago", 
      "delta": "Denver",
      "echo": "Easy",
      "foxtrot": "Frank"
    };
    result = lookup[val]; // truy xu·∫•t gi√° tr·ªã t∆∞∆°ng ·ª©ng
    return result;
  }
  console.log(phoneticLookup("charlie")); // üëâ "Chicago"
//S·ª≠a ƒë·ªïi h√†m checkObjƒë·ªÉ ki·ªÉm tra xem ƒë·ªëi t∆∞·ª£ng ƒë∆∞·ª£c truy·ªÅn cho tham s·ªë h√†m obj
// c√≥ ch·ª©a thu·ªôc t√≠nh c·ª• th·ªÉ ƒë∆∞·ª£c truy·ªÅn cho tham s·ªë h√†m hay kh√¥ng checkProp. 
// N·∫øu thu·ªôc t√≠nh ƒë∆∞·ª£c truy·ªÅn cho checkPropƒë∆∞·ª£c t√¨m th·∫•y tr√™n obj, 
// h√£y tr·∫£ v·ªÅ gi√° tr·ªã c·ªßa thu·ªôc t√≠nh ƒë√≥. N·∫øu kh√¥ng, h√£y tr·∫£ v·ªÅ Not Found.
///1. checkObj({gift: "pony", pet: "kitten", bed: "sleigh"}, "gift")ph·∫£i tr·∫£ v·ªÅ chu·ªói pony.
//2. checkObj({gift: "pony", pet: "kitten", bed: "sleigh"}, "pet")s·∫Ω tr·∫£ v·ªÅ chu·ªói kitten.
//3. checkObj({gift: "pony", pet: "kitten", bed: "sleigh"}, "house")s·∫Ω tr·∫£ v·ªÅ chu·ªói Not Found.
function checkObj(obj, checkProp) {
    // Only change code below this line
    if(obj.hasOwnProperty(checkProp)){
      return obj[checkProp];
    }else{
      return "Not Found";
    }
    return "Change Me!";
  }

//Doi tuong long nhauu
const ourStorage = {
  "desk": {
    "drawer": "stapler"
  },
  "cabinet": {
    "top drawer": { 
      "folder1": "a file",
      "folder2": "secrets"
    },
    "bottom drawer": "soda"
  }
};
ourStorage.cabinet["top drawer"].folder2;
ourStorage.desk.drawer;
//ourStorage.cabinet["top drawer"].folder2 s·∫Ω l√† chu·ªói secrets, 
// v√† ourStorage.desk.drawer s·∫Ω l√† chu·ªói stapler.

const ourPets = [
  {
    animalType: "cat",
    names: [
      "Meowzer",
      "Fluffy",
      "Kit-Cat"
    ]
  },
  {
    animalType: "dog",
    names: [
      "Spot",
      "Bowser",
      "Frankie"
    ]
  }
];

ourPets[0].names[1];
ourPets[1].names[0];
//ourPets[0].names[1]s·∫Ω l√† chu·ªói Fluffy, 
// v√† ourPets[1].names[0]s·∫Ω l√† chu·ªói Spot.
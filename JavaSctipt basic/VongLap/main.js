//V√≤ng l·∫∑p while, s·∫Ω ki·ªÉm tra ƒëi·ªÅu ki·ªán ƒë·∫ßu ti√™nn
const ourArray = [];
let i = 0;
while (i < 5) {
  ourArray.push(i);
  i++;
}
//Trong v√≠ d·ª• m√£ ·ªü tr√™n, while v√≤ng l·∫∑p s·∫Ω th·ª±c thi 5 l·∫ßn v√† th√™m c√°c s·ªë t·ª´ 0 ƒë·∫øn 4 v√†o ourArray.
const myArray = [];
  let a = 5;
  while(a>= 0){
    myArray.push(a);
    a--;
  }
  //myArray b·∫±ng [5, 4, 3, 2, 1, 0].

const ourArray2  = [];

//for (a; b; c), trong ƒë√≥ a l√† c√¢u l·ªánh kh·ªüi t·∫°o, b l√† c√¢u l·ªánh ƒëi·ªÅu ki·ªán v√† c l√† bi·ªÉu th·ª©c cu·ªëi c√πng.
//Trong v√≠ d·ª• sau, ch√∫ng ta kh·ªüi t·∫°o v·ªõi i = 0v√† l·∫∑p l·∫°i trong khi ƒëi·ªÅu ki·ªán c·ªßa ch√∫ng ta i < 5l√† ƒë√∫ng. 
// Ch√∫ng ta s·∫Ω tƒÉng itheo 1trong m·ªói l·∫ßn l·∫∑p v·ªõi i++nh∆∞ l√† bi·ªÉu th·ª©c cu·ªëi c√πng c·ªßa ch√∫ng ta.
for (let i = 0; i < 5; i++) {
  ourArray2.push(i);
}
//ourArray2 b√¢y gi·ªù s·∫Ω c√≥ gi√° tr·ªã [0, 1, 2, 3, 4].


const ourArray3  = [];
for (let i = 0; i < 10; i += 2) {
  ourArray3.push(i);
}
//Ch√∫ng ta s·∫Ω b·∫Øt ƒë·∫ßu t·∫°i i = 0 v√† l·∫∑p while i < 10.
// Ch√∫ng ta s·∫Ω tƒÉng th√™m i 2 cho m·ªói v√≤ng l·∫∑p v·ªõi i += 2.
//ourArray3 b√¢y gi·ªù s·∫Ω ch·ª©a [0, 2, 4, 6, 8]

//------
//M·ªôt t√°c v·ª• ph·ªï bi·∫øn trong JavaScript l√† l·∫∑p qua n·ªôi dung c·ªßa m·ªôt m·∫£ng. 
// M·ªôt c√°ch ƒë·ªÉ th·ª±c hi·ªán ƒëi·ªÅu ƒë√≥ l√† s·ª≠ d·ª•ng forv√≤ng l·∫∑p. M√£ n√†y s·∫Ω xu·∫•t t·ª´ng ph·∫ßn t·ª≠ c·ªßa m·∫£ng arrra console:

const arr = [10, 9, 8, 7, 6];

for (let i = 0; i < arr.length; i++) {
   console.log(arr[i]);
}
//H√£y nh·ªõ r·∫±ng m·∫£ng c√≥ ch·ªâ m·ª•c b·∫Øt ƒë·∫ßu t·ª´ s·ªë kh√¥ng, nghƒ©a l√† ch·ªâ m·ª•c cu·ªëi c√πng c·ªßa m·∫£ng l√† length - 1. 
//ƒêi·ªÅu ki·ªán c·ªßa ch√∫ng ta cho v√≤ng l·∫∑p n√†y l√† i < arr.length, ƒëi·ªÅu n√†y d·ª´ng v√≤ng l·∫∑p khi ib·∫±ng length. 
//Trong tr∆∞·ªùng h·ª£p n√†y, l·∫ßn l·∫∑p cu·ªëi c√πng l√† i === 4ie khi ib·∫±ng arr.length - 1v√† xu·∫•t 6ra b·∫£ng ƒëi·ªÅu khi·ªÉn. 
//Sau ƒë√≥ itƒÉng l√™n 5, v√† v√≤ng l·∫∑p k·∫øt th√∫c v√¨ i < arr.lengthl√† false.

const myArr = [2, 3, 4, 5, 6];
let total = 0;
for(let a =0; a< myArr.length; a++){
  total += myArr[a];
}
console.log(total);
//total ph·∫£i ƒë∆∞·ª£c khai b√°o v√† kh·ªüi t·∫°o b·∫±ng 0.
//total ph·∫£i b·∫±ng 20.
//B·∫°n n√™n s·ª≠ d·ª•ng v√≤ng for l·∫∑p ƒë·ªÉ l·∫∑p qua myArr.

//-----
const arr2  = [
  [1, 2], [3, 4], [5, 6]
];
for (let i = 0; i < arr2.length; i++) {
  for (let j = 0; j < arr2[i].length; j++) {
    console.log(arr[i][j]);
  }
}
//ƒêi·ªÅu n√†y s·∫Ω xu·∫•t ra t·ª´ng ph·∫ßn t·ª≠ con arrm·ªôt. L∆∞u √Ω r·∫±ng ƒë·ªëi v·ªõi v√≤ng l·∫∑p b√™n trong, 
//ch√∫ng ta ƒëang ki·ªÉm tra .length, arr[i]v√¨ arr[i]b·∫£n th√¢n n√≥ l√† m·ªôt m·∫£ng.

///-----------
//S·ª≠a ƒë·ªïi h√†m multiplyAllƒë·ªÉ tr·∫£ v·ªÅ t√≠ch c·ªßa t·∫•t c·∫£ c√°c s·ªë trong m·∫£ng con c·ªßa arr.
function multiplyAll(arr) {
  let product = 1;
  for(let a = 0; a < arr.length; a++){
    for(let b = 0; b < arr[a].length; b++){
      product *= arr[a][b];
    } 
  }
  return product;
}
// v√≤ng l·∫∑p do {...} while(): l√† v√≤ng l·∫∑p lu√¥n th·ª±c hi·ªán √≠t nh·∫•t 1 l·∫ßn, sau ƒë√≥ m·ªõi ki·ªÉm tra ƒëi·ªÅu ki·ªán l·∫∑p l·∫°i
const ourArray4  = []; 
let i2  = 5;
do {
  ourArray4.push(i2);
  i2++;
} while (i2  < 5);
// ourArray4 = [5];
const myArray5 = [];
let i3 = 10;

// Only change code below this line
do{
    myArray5.push(i3);
    i3++;
} while(i3 < 11);
//myArray5 ph·∫£i b·∫±ng [10].
//i3 n√™n b·∫±ng11

////-----
//ƒê·ªá quy (recursion) l√† m·ªôt k·ªπ thu·∫≠t trong l·∫≠p tr√¨nh m√† m·ªôt h√†m t·ª± g·ªçi l·∫°i ch√≠nh n√≥ ƒë·ªÉ gi·∫£i quy·∫øt m·ªôt b√†i to√°n.
//M·ªôt h√†m ƒë·ªá quy l√† h√†m:
//G·ªçi l·∫°i ch√≠nh n√≥ trong ph·∫ßn th√¢n h√†m.
//C√≥ ƒëi·ªÅu ki·ªán d·ª´ng (base case) ƒë·ªÉ tr√°nh g·ªçi v√¥ h·∫°n.
//C√°ch l√†m ƒë·ªá quy 1: x√°c ƒë·ªãnh ƒëi·ªÉm d·ª´ng; 2: logic
function giaiThua(num){
  var output = 1;
  for(var a = num; a > 0; a--){
    output = output * i;
  }
  return output;
}
console.log(giaiThua(3))
//output = 1 * 3;
//output = 3 * 2;
//output = 6 * 1;
/// D√πng ƒë·ªá quy
function giaiThua2(numb){
  if(numb > 0){
    return numb * giaiThua2(numb -1 );
  }
  return 1;
}
console.log(giaiThua2(3))
// giaiThua2(3)
// = 3 * giaiThua2(2)
// = 3 * (2 * giaiThua2(1))
// = 3 * (2 * (1 * giaiThua2(0)))
// = 3 * (2 * (1 * 1)) // v√¨ giaiThua2(0) tr·∫£ v·ªÅ 1
// = 3 * 2 * 1 = 6
//-------------

//H√†m Math.random n√≥ tr·∫£ v·ªÅ m·ªôt s·ªë th·∫≠p ph√¢n ng·∫´u nhi√™n trong kho·∫£ng t·ª´ 0 ƒë·∫øn 1(k th·ªÉ = 0, k th·ªÉ = 1)
//H√†m Math.floor()ƒë·ªÉ l√†m tr√≤n s·ªë n√†y xu·ªëng s·ªë nguy√™n g·∫ßn nh·∫•t.
//S·ª≠ d·ª•ng k·ªπ thu·∫≠t n√†y ƒë·ªÉ t·∫°o v√† tr·∫£ v·ªÅ m·ªôt s·ªë nguy√™n ng·∫´u nhi√™n trong ph·∫°m vi t·ª´ 0ƒë·∫øn 9.
function randomWholeNum() {
  return Math.floor(Math.random() * 10);
}

//Nh√¢n v·ªõi (max - min + 1) ƒë·ªÉ m·ªü r·ªông ph·∫°m vi l√™n s·ªë l∆∞·ª£ng gi√° tr·ªã nguy√™n c√≥ th·ªÉ l·∫•y t·ª´ min ƒë·∫øn max.
//+ min
//D·ªãch k·∫øt qu·∫£ v·ªÅ ƒë√∫ng kho·∫£ng mong mu·ªën (b·∫Øt ƒë·∫ßu t·ª´ min thay v√¨ 0).
// T·∫°o s·ªë nguy√™n t·ª´ 3 ƒë·∫øn 7
function randomRange(Min, Max) {
  return Math.floor(Math.random() * (Max - Min + 1)) + Min;
}
Math.floor(Math.random() * (7 - 3 + 1)) + 3
// T·ª©c l√†: Math.floor(Math.random() * 5) + 3

///H√†m n√†y parseInt()ph√¢n t√≠ch m·ªôt chu·ªói v√† tr·∫£ v·ªÅ m·ªôt s·ªë nguy√™n(√©p ki·ªÉu)
//parseInt("123")         // üëâ 123 (s·ªë nguy√™n)
//parseInt("123.45")      // üëâ 123 (b·ªè ph·∫ßn th·∫≠p ph√¢n)
//parseInt("abc123")      // üëâ NaN (v√¨ kh√¥ng b·∫Øt ƒë·∫ßu b·∫±ng s·ªë)
//parseInt("123abc")      // üëâ 123 (l·∫•y ƒë·∫øn khi g·∫∑p k√Ω t·ª± kh√¥ng ph·∫£i s·ªë)
//
//NaN l√† vi·∫øt t·∫Øt c·ªßa "Not-a-Number" ‚Äî t·ª©c l√† kh√¥ng ph·∫£i l√† m·ªôt s·ªë.
//parseInt("abc");           // üëâ NaN (v√¨ "abc" kh√¥ng c√≥ s·ªë ƒë·ªÉ √©p ki·ªÉu)
//Number(undefined);         // üëâ NaN
//Math.sqrt(-1);             // üëâ NaN (kh√¥ng cƒÉn b·∫≠c hai ƒë∆∞·ª£c s·ªë √¢m trong JS th∆∞·ªùng)
//"hello" * 3;               // üëâ NaN (v√¨ kh√¥ng th·ªÉ nh√¢n chu·ªói v·ªõi s·ªë)

//radix l√† h·ªá c∆° s·ªë ‚Äì t·ª©c l√† c∆° s·ªü ƒë·ªÉ ƒë·ªçc v√† hi·ªÉu m·ªôt chu·ªói s·ªë.
//JavaScript d√πng radix l√†m tham s·ªë th·ª© hai trong parseInt() ƒë·ªÉ bi·∫øt chu·ªói ƒëang thu·ªôc h·ªá g√¨.
//parseInt("10011", 2);  // üëâ 19 (v√¨ ƒë√¢y l√† s·ªë nh·ªã ph√¢n)
//parseInt("20", 8);     // üëâ 16 (20 trong h·ªá b√°t ph√¢n = 16 th·∫≠p ph√¢n)
//parseInt("1A", 16);    // üëâ 26 (1A h·ªá 16 = 26 th·∫≠p ph√¢n)
//parseInt("42", 10);    // üëâ 42 (b√¨nh th∆∞·ªùng)

//To√°n t·ª≠ ƒëi·ªÅu ki·ªán hay c√≤n g·ªçi l√† to√°n t·ª≠ 3 ng√¥i
//C√∫ ph√°p l√† a ? b : c, 
//trong ƒë√≥ a l√† ƒëi·ªÅu ki·ªán, b l√† m√£ ƒë·ªÉ ch·∫°y khi ƒëi·ªÅu ki·ªán tr·∫£ v·ªÅ true
// v√† c l√† m√£ ƒë·ªÉ ch·∫°y khi ƒëi·ªÅu ki·ªán tr·∫£ v·ªÅ false.

//S·ª≠ d·ª•ng to√°n t·ª≠ ƒëi·ªÅu ki·ªán trong checkEqual h√†m ƒë·ªÉ ki·ªÉm tra xem hai s·ªë c√≥ b·∫±ng nhau hay kh√¥ng. 
//H√†m s·∫Ω tr·∫£ v·ªÅ chu·ªói Equalho·∫∑c chu·ªói Not Equal.
// S·ª≠ d·ª•ng to√°n t·ª≠ ƒëi·ªÅu ki·ªán trong checkEqualh√†m ƒë·ªÉ ki·ªÉm tra xem hai s·ªë c√≥ b·∫±ng nhau hay kh√¥ng.
//  H√†m s·∫Ω tr·∫£ v·ªÅ chu·ªói Equalho·∫∑c chu·ªói Not Equal.
function checkEqual(a, b) {
  return a === b ? "Equal" : "Not Equal";
}

checkEqual(1, 2);
//To√°n t·ª≠ c√≥ ƒëi·ªÅu ki·ªán c≈©ng ktra ƒëc nhi·ªÅu ƒëi·ªÅu ki·ªán
//vd ki·ªÉm tra 1 s√¥ l√† √¢m,, hay d∆∞∆°ng hayyy = 0
function checkSign(num) {
  return (num > 0) ? "positive"
        : (num ===  0) ? "zero"
        : "negative";
}
checkSign(10);

//vd ham de qquyyy
function countup(n) {
  if (n < 1) {
    return [];
  } else {
    const countArray = countup(n - 1);
    countArray.push(n);
    return countArray;
  }
}
console.log(countup(3));
//countup(3)
//‚Üí const countArray = countup(2)
//‚Üí countup(2)
   //‚Üí const countArray = countup(1)
   //‚Üí countup(1)
     //‚Üí const countArray = countup(0) => []
     //‚Üí push(1) => [1]
   //‚Üí push(2) => [1, 2]
//‚Üí push(3) => [1, 2, 3]
//V·∫≠y countArray ·ªü m·ªói b∆∞·ªõc gi·ªØ m·∫£ng hi·ªán t·∫°i, r·ªìi push(n) v√†o cu·ªëi m·∫£ng ƒë√≥, r·ªìi tr·∫£ v·ªÅ m·∫£ng m·ªõi.

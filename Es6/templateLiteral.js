///Template Literal (hay Template String) l√† m·ªôt t√≠nh nƒÉng m·ªõi trong ES6 
//cho ph√©p b·∫°n t·∫°o chu·ªói (string) m·ªôt c√°ch linh ho·∫°t h∆°n, ƒë·∫∑c bi·ªát l√†:
//Ch√®n bi·∫øn v√†o chu·ªói d·ªÖ d√†ng
//Vi·∫øt chu·ªói nhi·ªÅu d√≤ng m√† kh√¥ng c·∫ßn \n
//H·ªó tr·ª£ bi·ªÉu th·ª©c (expression) trong chu·ªói
//C√∫ ph√°p
//Template literal d√πng d·∫•u backtick: ` thay v√¨ d·∫•u nh√°y ƒë∆°n ' ' hay nh√°y k√©p " ".
const name = "Nam";
const age = 22;

const sentence = `My name is ${name} and I am ${age} years old.`;
console.log(sentence);
//So v·ªõi ES5 ph·∫£i vi·∫øt:
//"My name is " + name + " and I am " + age + " years old.";
//‚áí ES6 g·ªçn h∆°n r·∫•t nhi·ªÅu!

//
const msg = `This is line 1
This is line 2
And this is line 3`;
console.log(msg);
//
const a = 5;
const b = 10;
console.log(`T·ªïng c·ªßa ${a} + ${b} = ${a + b}`);
// üëâ T·ªïng c·ªßa 5 + 10 = 15

///VD n√¢ng cao
//S·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c l·∫∑p (b·∫•t k·ª≥ lo·∫°i v√≤ng l·∫∑p n√†o) ƒë·ªÉ c√≥ ƒë∆∞·ª£c ƒë·∫ßu ra mong mu·ªën (hi·ªÉn th·ªã b√™n d∆∞·ªõi).
// [
//   '<li class="text-warning">no-var</li>',
//   '<li class="text-warning">var-on-top</li>',
//   '<li class="text-warning">linebreak</li>'
// ]
const result = {
  success: ["max-length", "no-amd", "prefer-arrow-functions"],
  failure: ["no-var", "var-on-top", "linebreak"],
  skipped: ["no-extra-semi", "no-dup-keys"]
};
function makeList(arr) {
  const failureItems = [];
  for(let i = 0; i < arr.length; i++){
    failureItems.push(`<li class="text-warning">${arr[i]}</li>`);
  }
  return failureItems;
}
const failuresList = makeList(result.failure);
console.log(failuresList);

//Object Literal l√† g√¨?
//Object Literal l√† c√°ch ƒë∆°n gi·∫£n v√† ph·ªï bi·∫øn nh·∫•t ƒë·ªÉ t·∫°o object trong JavaScript 
//b·∫±ng c√°ch s·ª≠ d·ª•ng c·∫∑p d·∫•u {} v√† khai b√°o c√°c c·∫∑p key: value.
//ES6 b·ªï sung m·ªôt s·ªë h·ªó tr·ª£ h·ªØu √≠ch cho vi·ªác ƒë·ªãnh nghƒ©a ƒë·ªëi t∆∞·ª£ng theo nghƒ©a ƒëen m·ªôt c√°ch d·ªÖ d√†ng.
// const getMousePosition = (x, y) => ({
//   x: x,
//   y: y
// });
// getMousePosition l√† m·ªôt h√†m ƒë∆°n gi·∫£n tr·∫£ v·ªÅ m·ªôt ƒë·ªëi t∆∞·ª£ng ch·ª©a hai thu·ªôc t√≠nh. 
// ES6 cung c·∫•p c√∫ ph√°p sugar ƒë·ªÉ lo·∫°i b·ªè s·ª± d∆∞ th·ª´a khi ph·∫£i vi·∫øt x: x. 
// B·∫°n ch·ªâ c·∫ßn vi·∫øt x m·ªôt l·∫ßn v√† n√≥ s·∫Ω ƒë∆∞·ª£c chuy·ªÉn ƒë·ªïi th√†nh x: x(ho·∫∑c m·ªôt c√°i g√¨ ƒë√≥ t∆∞∆°ng ƒë∆∞∆°ng) b√™n d∆∞·ªõi. 
// ƒê√¢y l√† c√πng m·ªôt h√†m ·ªü tr√™n ƒë∆∞·ª£c vi·∫øt l·∫°i ƒë·ªÉ s·ª≠ d·ª•ng c√∫ ph√°p m·ªõi n√†y:

const getMousePosition = (x, y) => ({ x, y });
console.log(getMousePosition(10,20));
//k·∫øt qu·∫£ { x: 10, y: 20 }

//Khi ƒë·ªãnh nghƒ©a c√°c h√†m trong ƒë·ªëi t∆∞·ª£ng trong ES5, ch√∫ng ta ph·∫£i s·ª≠ d·ª•ng t·ª´ kh√≥a function nh∆∞ sau:
// const person = {
//   name: "Taylor",
//   sayHello: function() {
//     return `Hello! My name is ${this.name}.`;
//   }
// };
//V·ªõi ES6, b·∫°n c√≥ th·ªÉ x√≥a functionho√†n to√†n t·ª´ kh√≥a v√† d·∫•u hai ch·∫•m khi ƒë·ªãnh nghƒ©a h√†m trong ƒë·ªëi t∆∞·ª£ng. 
//Sau ƒë√¢y l√† v√≠ d·ª• v·ªÅ c√∫ ph√°p n√†y:
const person = {
  name: "Taylor",
  sayHello() {
    return `Hello! My name is ${this.name}.`;
  }
};